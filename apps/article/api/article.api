syntax = "v1"

// 如果你没有在 .api 文件中明确指定请求体的格式，那么 GoZero 默认会期望 JSON 格式的请求体。
// 通常，在 RESTful API 中，JSON 是最常用的数据交换格式，因为它简洁、易读且易于解析。
//`json:"cover_url"` 指定了为json格式
type (
	UploadCoverResponse {
		CoverUrl string `json:"cover_url"`
	}
	PublishRequest {
		Title       string `json:"title"`
		Content     string `json:"content"`
		Description string `json:"description"`
		Cover       string `json:"cover"`
	}
	PublishResponse {
		ArticleId int64 `json:"article_id"`
	}
	ArticlesRequest {
		Cursor    int64 `json:"cursor"`
		PageSize  int64 `json:"page_size"`
		SortType  int32 `json:"sort_type"`
		ArticleId int64 `json:"article_id"`
	}
	ArticleItem {
		Id           int64  `json:"id"`
		Title        string `json:"title"`
		Content      string `json:"content"`
		Description  string `json:"description"`
		Cover        string `json:"cover"`
		CommentCount int64  `json:"comment_count"`
		LikeCount    int64  `json:"like_count"`
		PublishTime  int64  `json:"publish_time"`
		AuthorId     int64  `json:"author_id"`
	}
	ArticlesResponse {
		Articles  []ArticleItem `json:"articles"`
		IsEnd     bool          `json:"is_end"`
		Cursor    int64         `json:"cursor"`
		ArticleId int64         `json:"article_id"`
	}
	ArticleDetailRequest {
		ArticleId int64 `json:"article_id"`
	}
	ArticleDetailResponse {
		Article ArticleItem `json:"article_item"`
	}
	DeleteArticleRequest {
		ArticleId int64 `json:"article_id"`
	}
	DeleteArticleResponse {
		DeleteMessage string `json:"delete_message"`
	}
)

@server (
	prefix: /v1/article
	jwt:    Auth
)
service article-api {
	@handler UploadCoverHandler
	post /upload/cover returns (UploadCoverResponse)

	@handler PublishHandler
	post /publish (PublishRequest) returns (PublishResponse)

	//后面新增 文章详情 文章列表 删除文章的api
	// 这些操作都要 jwt鉴权
	@handler ArticlesHandler
	post /articles (ArticlesRequest) returns (ArticlesResponse)

	@handler ArticleDetailHandler
	post /articleDetail (ArticleDetailRequest) returns (ArticleDetailResponse)

	@handler DeleteArticleHandler
	post /deleteArticle (DeleteArticleRequest) returns (DeleteArticleResponse)
}

